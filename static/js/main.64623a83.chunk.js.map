{"version":3,"sources":["components/card/Card.module.css","components/cardList/CardList.module.css","components/searchBox/SearchBox.module.css","components/card/Card.jsx","components/cardList/CardList.jsx","components/searchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","monster","className","classes","cardContainer","src","id","alt","name","email","CardList","content","monsters","map","cardList","SearchBox","placeholder","handleChange","search","type","onChange","App","useState","setMonsters","setSearch","useEffect","fetchData","a","fetch","res","json","data","console","log","filteredContent","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,cAAgB,8B,gBCAlCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,4B,uLCgBZC,EAdF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAWC,IAAQC,cAAxB,UACE,qBACEC,IAAG,+BAA0BJ,EAAQK,GAAlC,oCAEHC,IAAI,YAEN,6BAAKN,EAAQO,OACb,4BAAIP,EAAQQ,Y,gBCDHC,EAPE,SAAC,GAAkB,IAC5BC,EAD2B,EAAfC,SACOC,KAAI,SAACZ,GAC5B,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,OAE5B,OAAO,qBAAKJ,UAAWC,IAAQW,SAAxB,SAAmCH,K,gBCO7BI,EAZG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEhC,OACE,uBACEf,UAAWC,IAAQe,OACnBC,KAAK,SACLC,SAAUH,EACVD,YAAaA,KCyBJK,EA9BH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOJ,EAAP,KAAeM,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,8CADR,cACVC,EADU,gBAEGA,EAAIC,OAFP,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,GACZR,EAAYQ,GAJI,2CAAH,qDAMfL,MACC,IACH,IAAMQ,EAAkBtB,EAASuB,QAAO,SAAClC,GAAD,OACtCA,EAAQO,KAAK4B,cAAcC,SAASnB,EAAOkB,kBAI7C,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,YAAY,kBACZC,aAAc,SAACqB,GAAD,OAAOd,EAAUc,EAAEC,OAAOC,UAE1C,cAAC,EAAD,CAAU5B,SAAUsB,QClBXO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64623a83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__2SK4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"CardList_cardList__4NCMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBox_search__1ISrP\"};","import React from 'react'\nimport classes from './Card.module.css'\n\nconst Card = ({ monster }) => {\n  return (\n    <div className={classes.cardContainer}>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set6&size=180x180\n        `}\n        alt='Monster'\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from '../card/Card'\nimport classes from './CardList.module.css'\n\nconst CardList = ({ monsters }) => {\n  const content = monsters.map((monster) => {\n    return <Card key={monster.id} monster={monster} />\n  })\n  return <div className={classes.cardList}>{content}</div>\n}\n\nexport default CardList\n","import React, { useState } from 'react'\nimport classes from './SearchBox.module.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  \n  return (\n    <input\n      className={classes.search}\n      type='search'\n      onChange={handleChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default SearchBox\n","import { useEffect, useState } from 'react'\nimport './App.css'\nimport CardList from './components/cardList/CardList'\nimport SearchBox from './components/searchBox/SearchBox'\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([])\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users')\n      const data = await res.json()\n      console.log(data)\n      setMonsters(data)\n    }\n    fetchData()\n  }, [])\n  const filteredContent = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(search.toLowerCase())\n  )\n\n  const changeHandler = () => {}\n  return (\n    <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder='Search Monsters'\n        handleChange={(e) => setSearch(e.target.value)}\n      />\n      <CardList monsters={filteredContent} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}